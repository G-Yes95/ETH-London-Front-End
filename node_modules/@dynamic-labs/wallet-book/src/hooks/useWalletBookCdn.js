import { useState, useEffect } from 'react';
import '../schemas/walletConnectSourceSchema.js';
import { walletBookSchema } from '../schemas/walletBookSchema.js';
import '../schemas/walletSchema.js';
import { logger } from '../helpers/logger.js';
import { getWalletBookCdnUrl } from '../helpers/getWalletBookCdnUrl.js';
import walletBookFallbacks from '../../wallet-book-fallbacks.js';

const useWalletBookCdn = () => {
    const [walletBook, setWalletBook] = useState({});
    useEffect(() => {
        const fetchWalletBook = async () => {
            const url = getWalletBookCdnUrl();
            let data;
            try {
                const response = await fetch(url);
                if (response.ok) {
                    data = walletBookSchema.parse(await response.json());
                }
                else {
                    throw new Error('Fetch Failed with status: ' + response.status);
                }
            }
            catch (e) {
                logger.error(`Failed to fetch wallet book data from CDN (${url})`, e);
            }
            if (!data) {
                logger.warn('Falling back to wallet book data from wallet-book-fallbacks.json');
                data = walletBookSchema.parse(walletBookFallbacks);
            }
            setWalletBook(data);
        };
        fetchWalletBook();
    }, []);
    return walletBook;
};

export { useWalletBookCdn };
