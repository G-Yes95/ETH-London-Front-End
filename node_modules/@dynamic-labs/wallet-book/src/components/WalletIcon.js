import { useState, createElement, Fragment } from 'react';
import { getWalletIconUrl, getDefaultWalletIconUrl } from '../helpers/getWalletIconUrl.js';
import { findWalletBookWallet } from '../helpers/findWalletBookWallet.js';
import '../helpers/logger.js';
import '../schemas/walletConnectSourceSchema.js';
import '../schemas/walletBookSchema.js';
import '../schemas/walletSchema.js';
import { useWalletBookContext } from '../hooks/useWalletBookContext.js';

const WalletIcon = ({ walletKey, children, ...props }) => {
    const { walletBook } = useWalletBookContext();
    const walletData = findWalletBookWallet(walletBook, walletKey);
    const [imgError, setImgError] = useState(false);
    const walletIconUrl = getWalletIconUrl(walletBook, walletKey);
    const defaultWalletIconUrl = getDefaultWalletIconUrl();
    if (!walletData || !walletData.brand || !walletIconUrl) {
        return createElement(Fragment, {}, children);
    }
    const onError = () => {
        setImgError(true);
    };
    return createElement('img', {
        'data-testid': `wallet-icon-${walletKey}`,
        ...props,
        alt: walletData.brand.alt,
        onError: onError,
        src: imgError ? defaultWalletIconUrl : walletIconUrl,
    }, children);
};

export { WalletIcon };
