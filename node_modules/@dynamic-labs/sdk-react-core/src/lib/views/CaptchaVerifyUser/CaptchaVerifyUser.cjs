'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _tslib = require('../../../../_virtual/_tslib.cjs');
var jsxRuntime = require('react/jsx-runtime');
var iconic = require('@dynamic-labs/iconic');
var walletConnectorCore = require('@dynamic-labs/wallet-connector-core');
require('react');
var Typography = require('../../components/Typography/Typography.cjs');
require('@dynamic-labs/sdk-api');
require('../../shared/logger.cjs');
var ViewContext = require('../../context/ViewContext/ViewContext.cjs');
require('@dynamic-labs/wallet-book');
require('../../utils/constants/colors.cjs');
require('../../shared/utils/classes/storage/localStorage.cjs');
require('viem');
require('@dynamic-labs/utils');
require('../../shared/consts/index.cjs');
var useInternalDynamicContext = require('../../context/DynamicContext/useInternalDynamicContext.cjs');
require('@dynamic-labs/multi-wallet');
var requiresTwoStepAuthentication = require('../../utils/functions/requiresTwoStepAuthentication/requiresTwoStepAuthentication.cjs');
require('../../components/ShadowDOM/ShadowDOM.cjs');
require('../../context/ThemeContext/ThemeContext.cjs');
require('react-dom');
require('react-focus-lock');
require('../../components/Transition/ZoomTransition/ZoomTransition.cjs');
require('../../components/Transition/SlideInUpTransition/SlideInUpTransition.cjs');
require('../../components/Transition/OpacityTransition/OpacityTransition.cjs');
require('../../config/ApiEndpoint.cjs');
require('@dynamic-labs/rpc-providers');
require('../../utils/hooks/useWallets/utils/verifyMagicIsSetup/verifyMagicIsSetup.cjs');
var useVerifyWallet = require('../../utils/hooks/useVerifyWallet/useVerifyWallet.cjs');
require('react-i18next');
require('../../components/OverlayCard/OverlayCard.context.cjs');
require('../../context/FooterAnimationContext/index.cjs');
require('../../context/MockContext/MockContext.cjs');
require('../../context/QrCodeContext/QrCodeContext.cjs');
var PoweredByDynamic = require('../../components/PoweredByDynamic/PoweredByDynamic.cjs');
require('../../context/AccountExistsContext/AccountExistsContext.cjs');
require('../../context/ErrorContext/ErrorContext.cjs');
require('../../context/WalletGroupContext/WalletGroupContext.cjs');
require('../../widgets/DynamicWidget/components/DynamicWidgetHeader/DynamicWidgetHeader.cjs');
var CaptchaContext = require('../../context/CaptchaContext/CaptchaContext.cjs');
require('../../context/EmailVerificationContext/EmailVerificationContext.cjs');
require('qrcode');
require('../../context/LoadingContext/LoadingContext.cjs');
require('../../context/AccessDeniedContext/AccessDeniedContext.cjs');
require('i18next');
require('../../widgets/DynamicWidget/context/DynamicWidgetContext.cjs');
require('yup');
require('../../components/UserProfile/parts/UserProfileField/components/VerifiedEmailIcon/VerifiedEmailIcon.cjs');
require('@dynamic-labs/types');
require('../../utils/hooks/useUserUpdateRequest/useUpdateUser/useUpdateUser.cjs');
require('../../context/UserFieldEditorContext/UserFieldEditorContext.cjs');
require('formik');
require('../../components/IconButton/IconButton.cjs');
require('../../components/Alert/Alert.cjs');
require('../../widgets/DynamicWidget/views/ManagePasskeysWidgetView/PasskeyCard/PasskeyCard.cjs');
require('../../components/Popper/Popper/Popper.cjs');
require('../../components/Popper/PopperContext/PopperContext.cjs');
require('../../components/InlineWidget/InlineWidget.cjs');
require('../../components/MenuList/Dropdown/Dropdown.cjs');
var Captcha = require('../../components/Captcha/Captcha.cjs');

const CaptchaVerifyUser = () => {
    const { consumeNonce, displaySiweStatement, environmentId, projectSettings, setIsSingleWalletAccount, selectedWalletConnector: walletConnector, walletUiUtils, } = useInternalDynamicContext.useInternalDynamicContext();
    const { setView } = ViewContext.useViewContext();
    const { setCaptchaToken } = CaptchaContext.useCaptchaContext();
    const verifyWallet = useVerifyWallet.useVerifyWallet({
        consumeNonce,
        displaySiweStatement,
        environmentId,
        projectSettings,
        setIsSingleWalletAccount,
    });
    if (!walletConnector) {
        return null;
    }
    const handleSuccess = (captchaToken) => _tslib.__awaiter(void 0, void 0, void 0, function* () {
        const publicWalletAddress = yield walletConnector.fetchPublicAddress();
        if (!publicWalletAddress) {
            return;
        }
        if (!walletConnectorCore.isEmbeddedConnector(walletConnector) ||
            walletConnectorCore.isBloctoConnector(walletConnector)) {
            setView('pending-signature');
        }
        else {
            walletUiUtils.disabledConfirmationOnce();
        }
        if (requiresTwoStepAuthentication.requiresTwoStepAuthentication(walletConnector)) {
            setCaptchaToken(captchaToken);
            return;
        }
        yield verifyWallet({
            captchaToken,
            publicWalletAddress,
            walletConnector,
        });
    });
    return (jsxRuntime.jsxs("div", { className: 'captcha-verify-user__container', children: [jsxRuntime.jsx(iconic.CaptchaWaveIcon, { className: 'captcha-verify-user__icon' }), jsxRuntime.jsx(Typography.Typography, { weight: 'medium', variant: 'title', color: 'primary', className: 'captcha-verify-user__title', children: "Let\u2019s verify you\u2019re human" }), jsxRuntime.jsx(Typography.Typography, { variant: 'body_normal', weight: 'regular', color: 'secondary', className: 'captcha-verify-user__subtitle', children: "We need to quickly verify you\u2019re human before we proceed." }), jsxRuntime.jsx(Captcha.Captcha, { handleSuccess: handleSuccess }), jsxRuntime.jsx(PoweredByDynamic.PoweredByDynamic, { classNameRoot: 'captcha-verify-user__dynamic-logo' })] }));
};

exports.CaptchaVerifyUser = CaptchaVerifyUser;
